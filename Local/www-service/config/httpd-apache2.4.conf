# Apache httpd v2.4 minimal configuration
#
# Note: needs DOCUMENT_ROOT to be defined in calling environment,
# this provides portability between systems.
#
# 2023, update for use with gattaca2 as well as s383 machines
# 2022, full update for apache 2.4 Require directive
# 2021, modified for httpd 2.4
# 2020, modified to restrict the files served
# adapted by turmon, 2018, for use as an Exosims result server

# prefork MPM: Implements a non-threaded, pre-forking web server
# See: http://httpd.apache.org/docs/2.4/mod/prefork.html
LoadModule mpm_prefork_module modules/mod_mpm_prefork.so

# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept. No trailing /.
ServerRoot "/etc/httpd"

# Minimum modules needed
LoadModule log_config_module modules/mod_log_config.so
LoadModule dir_module modules/mod_dir.so
# allow server to set html headers to control cache'ing
# header rewrites controlled in: .htaccess
LoadModule headers_module modules/mod_headers.so
# turmon 11/2023: re-enable rewrites
LoadModule rewrite_module modules/mod_rewrite.so
# for png's, etc
LoadModule mime_module modules/mod_mime.so
# turmon: for host-based access restrictions, not needed at present
LoadModule authz_host_module modules/mod_authz_host.so
# turmon: new for apache 2.4 (definitely needed)
LoadModule unixd_module modules/mod_unixd.so
# turmon: new for apache 2.4 (for Require directives below)
LoadModule authz_core_module modules/mod_authz_core.so

# for URL-rewrite directives
<IfModule rewrite_module>
  RewriteEngine  on
</IfModule>

# What multimedia types to serve... a much more restricted
# set than all of mime.types.
# doc-generators use .xml files
<IfModule mime_module>
  # TypesConfig conf/mime.types # (original)
  TypesConfig /dev/null
  AddType text/html .html
  AddType text/plain .txt .text .conf .log
  AddType text/csv .csv
  AddType text/css .css
  AddType application/xml .xml
  AddType application/javascript .js
  AddType video/mp4 .mp4
  AddType video/quicktime .mov
  #AddType video/mpeg .mpeg .mpg
  #AddType video/ogg .ogv
  #AddType video/webm .webm
</IfModule>

# turmon: 1/2022 commented out: the driver script fills this in,
# and httpd will use DNS lookup to get it anyway.
# Also, server name is not relevant b/c we are not using virtual hosts
# Also (10/2023) we're now only serving to localhost
#ServerName mustang2.jpl.nasa.gov

# port to listen on - expect to override
# Listen 8080

# server PID file - expect to override
PidFile /tmp/httpd.pid

# errors go to their own log - expect to override
ErrorLog /tmp/error_log
LogLevel notice

# access log - redirected to null
LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog /dev/null common

# In a basic setup httpd can only serve files from its document root
# Files are served from this root, but not all files below it can be
# served, see below.
DocumentRoot "${DOCUMENT_ROOT}"

# [0] Deny access to the entirety of the server's filesystem.
# Must explicitly permit access to web content directories in other 
# <Directory> blocks below.
<Directory />
  AllowOverride none
  Require all denied
</Directory>

# [1] visit the naked URL -> redirected to /sims/
<IfModule rewrite_module>
  RewriteRule "^$"  "/sims/"  [R]
  RewriteRule "^/$" "/sims/"  [R]
</IfModule>

# [2] Allow serving sims/*
# Note: turned symlinks off.
#   (tested/verified, 10/2020)
<Directory ${DOCUMENT_ROOT}/sims>
  Options -FollowSymLinks
  Require all granted
</Directory>

# [3] Allow serving Local/www-resources/*
# Note: this does not include the logfiles, which are in .../www-service/...
# Note: turned symlinks off.
#   (tested/verified, 1/2022)
<Directory ${DOCUMENT_ROOT}/Local/www-resources>
  Options -FollowSymLinks
  Require all granted
</Directory>

# default file to serve for bare directories
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

# Disallow serving any files or dirs beginning with .
# (e.g., .DS_Store, .git*, .htaccess)
#   (tested/verified, 1/2022)
<FilesMatch "^\.(.*)$">
    Require all denied
</FilesMatch>
<DirectoryMatch "/\.(.*)">
    Require all denied
</DirectoryMatch>

# set headers to control cache'ing of files which are dynamically updated
# (jpg, png, html) - we want to force the browser to check their cached 
# version of these files, because they are often updated dynamically.
# ref: https://jakearchibald.com/2016/caching-best-practices/
#
# verify these by retrieving headers via curl, e.g.:
#   curl --head http://mustang2.jpl.nasa.gov:8090/sims/
<IfModule mod_headers.c>
    # re-use TCP connection to server
    Header set Connection keep-alive
    # ages are in seconds - 1209600 = 14 days
    # we don't serve these except for .ico perhaps - they are resources
    <filesmatch "\.(ico|gif|eot|woff|otf|ttf|svg)$">
        Header set Cache-Control "max-age=1209600, public"
    </filesmatch>
    # css and js should use private for proxy caching 
    # https://developers.google.com/speed/docs/best-practices/caching#LeverageProxyCaching
    <filesmatch "\.(css)$">
        Header set Cache-Control "max-age=1209600, private"
    </filesmatch>
    <filesmatch "\.(js)$">
        Header set Cache-Control "max-age=1209600, private"
    </filesmatch>
    # core results are JPEGs, PNGs, and HTML: they change dynamically
    # no-cache is misleading, it means
    # the browser must re-validate currency before using the cache
    # (no-store means do not cache at all)
    <filesmatch "\.(jpg|jpeg|png)$">
        Header set Cache-Control "no-cache"
    </filesmatch>
    <filesmatch "\.(x?html)$">
        Header set Cache-Control "no-cache"
    </filesmatch>
</IfModule>
