#!/usr/bin/env python
r'''
csv-diff.py: difference between two CSV files

usage:
  csv-diff.py [-1 | -2] [-d KEY ...] CSVFILE CSVFILE

where:
  CSVFILE is a CSV file probably containing DRM summaries
     (it is as generated by reduce-drms.py)
and:
  -d KEY gives key(s) to drop before comparing
  -1: only display the differences in file1
  -2: only display the differences in file2

turmon jan 2019
'''

import pandas as pd
import sys
import csv
import os
import argparse

# global verbosity mode, also usable for debugging print's
VERBOSITY = 0

########################################
###
###  Utility Functions
###
########################################

def dataframe_diff(df1: pd.DataFrame, df2: pd.DataFrame, which=None):

    comparison_df = df1.merge(
        df2,
        indicator=True,
        how='outer'
    )
    if which is None:
        diff_df = comparison_df[comparison_df['_merge'] != 'both']
    else:
        diff_df = comparison_df[comparison_df['_merge'] == which]
    return diff_df


def compare(args):
    # load CSV
    try:
        df1 = pd.read_csv(args.file1)
    except IOError:
        sys.stderr.write("Fatal: could not open `%s'." % args.file1)
        raise
    try:
        df2 = pd.read_csv(args.file2)
    except IOError:
        sys.stderr.write("Fatal: could not open `%s'." % args.file2)
        raise
    # drop a list of column(s) if requested
    if args.drop:
        df1.drop(columns=args.drop, inplace=True)
        df2.drop(columns=args.drop, inplace=True)
    # find the diff
    d_del = dataframe_diff(df1, df2, which=args.which)
    return df1, df2, d_del


def main(args):
    df1, df2, d_del = compare(args)
    if len(d_del) == 0:
        if VERBOSITY > 0:
            print('No differences across {} keys and {} & {} rows'.format(len(d_del.keys()), len(df1), len(df2)))
        return 0
    else:
        rows = (d_del.index).tolist()
        if VERBOSITY > 0:
            print('Differences observed in these (0-based) rows:\n\t{}'.format(rows))
            print('\t(rows >= {} are from the second file.)'.format(len(df1)))
            print('Tabulated difference:')
        # (potentially compact d_del before printing to eliminate agreeing rows?)
        print(d_del)
        return 1

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Find differences in two CSV files.",
                                     epilog='')
    parser.add_argument('file1', metavar='CSVFILE')
    parser.add_argument('file2', metavar='CSVFILE')
    parser.add_argument('-1', action='store_true', dest='only1', help='Keys only in FILE1.')
    parser.add_argument('-2', action='store_true', dest='only2', help='Keys only in FILE2.')
    parser.add_argument('-d', '--drop', type=str, action='append', default=[], metavar='KEY',
                           help='Drop this key before comparing')
    parser.add_argument('-v', help='verbosity', action='count', dest='verbose',
                            default=0)
    args = parser.parse_args()
    
    VERBOSITY = args.verbose

    # program name, for convenience
    args.progname = os.path.basename(sys.argv[0])
    
    # set up the sense
    args.which = None
    if args.only1:
        args.which = 'left_only'
    if args.only2:
        args.which = 'right_only'
        
    rv = main(args)
    sys.exit(rv)
